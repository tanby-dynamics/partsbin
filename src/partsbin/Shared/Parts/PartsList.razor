@using partsbin.Helpers
@using partsbin.Services
@using partsbin.BusinessLogic.Helpers
@using partsbin.BusinessLogic.Models
@using partsbin.BusinessLogic.Services
@inject NavigationManager NavigationManager;
@inject IPartService PartService;
@inject IPartUiService PartUiService;
@inject IToastService ToastService;
@inject IConfirmUiService ConfirmUiService;

<table class="table border">
    <thead>
    <tr>
        <th>Part type</th>
        <th>Range</th>
        <th>Part name</th>
        <th>Package type</th>
        <th>Value</th>
        <th>Manufacturer</th>
        <th>Part number</th>
        <th>Location</th>
        <th>Quantity</th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var part in Parts)
    {
        <tr>
            <td>

                @if (part.PartType.HasContent())
                {
                    <a href="/part/@part.Id">
                        @part.PartType
                    </a>
                }
                else
                {
                    <span>---</span>
                }
            </td>
            <td>
                @if (part.Range.HasContent())
                {
                    <a href="/part/@part.Id">
                        @part.Range
                    </a>
                }
                else
                {
                    <span>---</span>
                }
            </td>
            <td>
                @if (part.PartName.HasContent())
                {
                    <a href="/part/@part.Id">
                        @part.PartName
                    </a>
                }
                else
                {
                    <span>---</span>
                }
            </td>
            <td>
                @if (part.PackageType.HasContent())
                {
                    <a href="/part/@part.Id">
                        @part.PackageType
                    </a>
                }
                else
                {
                    <span>---</span>
                }
            </td>
            <td>
                @if (part.GetFormattedValue().HasContent())
                {
                    <a href="/part/@part.Id">
                        @part.GetFormattedValue()
                    </a>
                }
                else
                {
                    <span>---</span>
                }
            </td>
            <td>
                @if (part.Manufacturer.HasContent())
                {
                    <a href="/part/@part.Id">
                        @part.Manufacturer
                    </a>
                }
                else
                {
                    <span>---</span>
                }
            </td>
            <td>
                @if (part.PartNumber.HasContent())
                {
                    <a href="/part/@part.Id">
                        @part.PartNumber
                    </a>
                }
                else
                {
                    <span>---</span>
                }
            </td>
            <td>
                @if (part.Location.HasContent())
                {
                    <a href="/part/@part.Id">
                        @part.Location
                    </a>
                }
                else
                {
                    <span>---</span>
                }
            </td>
            <td style="@(part.Quantity <= 0 ? "color:#f55" : "")">
                <PartQuantity Part="@part"
                              Outline="true"/>
            </td>
            <td>
                <div class="btn-group" role="group">
                    <button type="button"
                            @onclick="@(() => NavigationManager.NavigateTo($"/part/{part.Id}"))"
                            @onclick:preventDefault
                            class="btn btn-outline-primary btn-sm"
                            title="Open part details">
                        <i class="oi oi-eye"></i>
                    </button>
                    <div class="btn-group" role="group">
                        <button class="btn btn-outline-primary dropdown-toggle btn-sm"
                                type="button"
                                data-bs-toggle="dropdown"
                                aria-expanded="false">
                            Actions
                        </button>
                        <ul class="dropdown-menu">
                            <li>
                                <button class="dropdown-item"
                                        type="button"
                                        @onclick:preventDefault
                                        @onclick="@(() => EditPart(part))">
                                    Edit in place
                                </button>
                            </li>
                            <li>
                                <button class="dropdown-item"
                                        type="button"
                                        @onclick:preventDefault
                                        @onclick="@(() => NavigationManager.NavigateTo($"/part/{part.Id}"))">
                                    Open part details
                                </button>
                            </li>
                            <li>
                                <button class="dropdown-item"
                                        type="button"
                                        @onclick:preventDefault
                                        @onclick="@(() => DuplicatePart(part))">
                                    Duplicate part
                                </button>
                            </li>
                            <li>
                                <hr class="dropdown-divider"/>
                            </li>
                            <li>
                                <button class="dropdown-item"
                                        type="button"
                                        @onclick:preventDefault
                                        @onclick="@(() => DeletePart(part))">
                                    Delete part
                                </button>
                            </li>
                        </ul>
                    </div>
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>

@code {

    [Parameter]
    public required List<Part> Parts { get; set; }

    private async void EditPart(Part part)
    {
        await PartUiService.EditPart(part);
        StateHasChanged();
    }

    private async void DeletePart(Part part)
    {
        var confirmResult = await ConfirmUiService.Confirm("Delete part", "Are you sure you want to delete this part?");

        if (confirmResult == ConfirmResult.Cancelled) return;
            
        part.IsDeleted = true;
        await PartService.UpdatePart(part);
        Parts.Remove(part);

        ToastService.ShowSuccess(
            message: "The part has been deleted. You can recover it from the rubbish bin.",
            settings: settings =>
            {
               settings.OnClick = () => NavigationManager.NavigateTo("/rubbish-bin");
            });
        StateHasChanged();
    }

    private async void DuplicatePart(Part part)
    {
        var confirmResult = await ConfirmUiService.Confirm(
            "Duplicate part",
            "Are you sure you want to duplicate this part?");
        if (confirmResult == ConfirmResult.Cancelled) return;
        
        var duplicatePart = await PartService.Duplicate(part);
        
        NavigationManager.NavigateTo(
            $"/part/{duplicatePart.Id}?d=1",
            forceLoad: true);
        ToastService.ShowSuccess("The part has been duplicated, you are working on the duplicate part now");
    }

}
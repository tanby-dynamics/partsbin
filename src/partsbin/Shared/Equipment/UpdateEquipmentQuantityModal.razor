@using partsbin.Services
@using partsbin.BusinessLogic.Models
@using partsbin.BusinessLogic.Services
@inject IEquipmentService EquipmentService;
@inject IToastService ToastService;

<EditForm Model="@Equipment" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group" style="width:400px">
        <div style="margin-top:10px">
            <label for="quantity">Quantity</label>
            <InputNumber id="quantity"
                         class="form-control"
                         placeholder="Quantity"
                         @bind-Value="Equipment!.Quantity"/>
        </div>
    </div>
    <div style="margin-top: 10px;">
        <button type="submit" class="btn btn-outline-primary">
            Update quantity
        </button>
    </div>
</EditForm>

@code {

    [Parameter]
    public Equipment? Equipment { get; set; }

    [CascadingParameter]
    BlazoredModalInstance? Modal { get; set; }

    private async void HandleValidSubmit()
    {
        try
        {
            await EquipmentService.UpdateEquipment(Equipment!);
            await Modal!.CloseAsync((ModalResult.Ok(Equipment)));
        }
        catch (InvalidOperationException ex)
        {
            ToastService.ShowError(ex.Message);
        }
    }

}
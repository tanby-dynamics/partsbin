@using partsbin.Helpers
@using partsbin.Services
@inject IPartService PartService; 
@inject IToastService ToastService;
@inject IPartDocumentUiService PartDocumentUiService;
@inject IConfirmUiService ConfirmUiService;

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-6">
                <h4>Documentation and links</h4>
            </div>
            <div class="col-6 text-end">
                <button class="btn btn-outline-primary"
                        type="button"
                        @onclick="Add">
                    Add
                </button>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="card-text">
            @foreach (var document in Part.Documents)
            {
                <div class="row" style="margin-top:10px">
                    <div class="col-12">
                        <div class="card">
                            <h5 class="card-header">
                                @if (document.Url.HasContent())
                                {
                                    <a href="@document.Url" target="_blank">
                                        @document.Name
                                    </a>
                                }
                                else
                                {
                                    @document.Name
                                }
                            </h5>
                            <div class="card-body">
                                @if (document.HtmlNotes.HasContent())
                                {
                                    <span>Notes:</span><br/>
                                    @((MarkupString)document.HtmlNotes!)
                                }
                            </div>
                            <div class="card-footer">
                                <button class="btn btn-sm btn-outline-primary"
                                        @onclick="() => Edit(document)">
                                    <i class="oi oi-pencil"></i> Edit
                                </button>
                                <button class="btn btn-sm btn-outline-danger"
                                        @onclick="@(() => Delete(document))">
                                    Delete
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public required Part Part { get; set; }

    private async void Add()
    {
        await PartDocumentUiService.AddDocument(Part);
        StateHasChanged();
    }
    
    private async void Edit(PartDocument document)
    {
        await PartDocumentUiService.EditDocument(Part, document);
        StateHasChanged();
    }

    private async void Delete(PartDocument document)
    {
        var confirmResult = await ConfirmUiService.Confirm(
            "Deleting supplier",
            "Are you sure you want to delete this supplier? It will only be deleted for this part. This action cannot be undone.");
        if (confirmResult == ConfirmResult.Cancelled) return;
        
        Part.Documents.Remove(document);
        await PartService.UpdatePart(Part);
        ToastService.ShowSuccess("The document has been deleted");
        StateHasChanged();
    }
}